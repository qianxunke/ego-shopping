// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.10.1
// source: modules/inventory/product/product.proto

package product

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//商品信息
type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                         string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BrandId                    int64   `protobuf:"varint,2,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`                                                              //品牌ID
	ProductCategoryId          int64   `protobuf:"varint,3,opt,name=product_category_id,json=productCategoryId,proto3" json:"product_category_id,omitempty"`                              //商品分类id
	FeightTemplateId           int64   `protobuf:"varint,4,opt,name=feight_template_id,json=feightTemplateId,proto3" json:"feight_template_id,omitempty"`                                 //
	ProductAttributeCategoryId int64   `protobuf:"varint,5,opt,name=product_attribute_category_id,json=productAttributeCategoryId,proto3" json:"product_attribute_category_id,omitempty"` //商品属性id
	Name                       string  `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Pic                        string  `protobuf:"bytes,7,opt,name=pic,proto3" json:"pic,omitempty"`
	ProductSn                  string  `protobuf:"bytes,8,opt,name=product_sn,json=productSn,proto3" json:"product_sn,omitempty"`
	DeleteStatus               int64   `protobuf:"varint,9,opt,name=delete_status,json=deleteStatus,proto3" json:"delete_status,omitempty"`           //删除状态：0->未删除；1->已删除
	PublishStatus              int64   `protobuf:"varint,10,opt,name=publish_status,json=publishStatus,proto3" json:"publish_status,omitempty"`       //上架状态：0->下架；1->上架
	NewStatus                  int64   `protobuf:"varint,11,opt,name=new_status,json=newStatus,proto3" json:"new_status,omitempty"`                   //新品状态:0->不是新品；1->新品
	RecommandStatus            int64   `protobuf:"varint,12,opt,name=recommand_status,json=recommandStatus,proto3" json:"recommand_status,omitempty"` //推荐状态 0->不推荐；1->推荐
	VerifyStatus               int64   `protobuf:"varint,13,opt,name=verify_status,json=verifyStatus,proto3" json:"verify_status,omitempty"`          //审核状态  0->未审核；1->审核通过
	Sort                       int64   `protobuf:"varint,14,opt,name=sort,proto3" json:"sort,omitempty"`                                              //排序
	Sale                       int64   `protobuf:"varint,15,opt,name=sale,proto3" json:"sale,omitempty"`                                              //销量
	Price                      float32 `protobuf:"fixed32,16,opt,name=price,proto3" json:"price,omitempty"`
	PromotionPrice             float32 `protobuf:"fixed32,17,opt,name=promotion_price,json=promotionPrice,proto3" json:"promotion_price,omitempty"` //促销价格
	GiftGrowth                 int64   `protobuf:"varint,18,opt,name=gift_growth,json=giftGrowth,proto3" json:"gift_growth,omitempty"`              //赠送的成长值
	GiftPoint                  int64   `protobuf:"varint,19,opt,name=gift_point,json=giftPoint,proto3" json:"gift_point,omitempty"`                 //赠送的积分
	UsePointLimit              int64   `protobuf:"varint,20,opt,name=use_point_limit,json=usePointLimit,proto3" json:"use_point_limit,omitempty"`   //限制使用的积分数
	SubTitle                   string  `protobuf:"bytes,21,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`                     //副标题
	Description                string  `protobuf:"bytes,22,opt,name=description,proto3" json:"description,omitempty"`                               //商品描述
	OriginalPrice              float32 `protobuf:"fixed32,23,opt,name=original_price,json=originalPrice,proto3" json:"original_price,omitempty"`    //市场价
	Stock                      int64   `protobuf:"varint,24,opt,name=stock,proto3" json:"stock,omitempty"`                                          //库存
	LowStock                   int64   `protobuf:"varint,25,opt,name=low_stock,json=lowStock,proto3" json:"low_stock,omitempty"`                    //库存预警值
	Unit                       string  `protobuf:"bytes,26,opt,name=unit,proto3" json:"unit,omitempty"`                                             //单价
	Weight                     float32 `protobuf:"fixed32,27,opt,name=weight,proto3" json:"weight,omitempty"`                                       //商品重量，默认为克
	PreviewStatus              int64   `protobuf:"varint,28,opt,name=preview_status,json=previewStatus,proto3" json:"preview_status,omitempty"`     //是否为预告商品：0->不是；1->是
	ServiceIds                 string  `protobuf:"bytes,29,opt,name=service_ids,json=serviceIds,proto3" json:"service_ids,omitempty"`               //以逗号分割的产品服务：1->无忧退货；2->快速退款；3->免费包邮
	Keywords                   string  `protobuf:"bytes,30,opt,name=keywords,proto3" json:"keywords,omitempty"`                                     //关键词
	Note                       string  `protobuf:"bytes,31,opt,name=note,proto3" json:"note,omitempty"`                                             //商品备注
	AlbumPics                  string  `protobuf:"bytes,32,opt,name=album_pics,json=albumPics,proto3" json:"album_pics,omitempty"`                  //画册图片，连产品图片限制为5张，以逗号分割
	DetailTitle                string  `protobuf:"bytes,33,opt,name=detail_title,json=detailTitle,proto3" json:"detail_title,omitempty"`
	DetailDesc                 string  `protobuf:"bytes,34,opt,name=detail_desc,json=detailDesc,proto3" json:"detail_desc,omitempty"`
	DetailHtml                 string  `protobuf:"bytes,35,opt,name=detail_html,json=detailHtml,proto3" json:"detail_html,omitempty"`                              //产品详情网页内容
	DetailMobileHtml           string  `protobuf:"bytes,36,opt,name=detail_mobile_html,json=detailMobileHtml,proto3" json:"detail_mobile_html,omitempty"`          //移动端网页详情
	PromotionStartTime         string  `protobuf:"bytes,37,opt,name=promotion_start_time,json=promotionStartTime,proto3" json:"promotion_start_time,omitempty"`    //促销开始时间
	PromotionEndTime           string  `protobuf:"bytes,38,opt,name=promotion_end_time,json=promotionEndTime,proto3" json:"promotion_end_time,omitempty"`          //促销结束时间
	PromotionPerLimit          int64   `protobuf:"varint,39,opt,name=promotion_per_limit,json=promotionPerLimit,proto3" json:"promotion_per_limit,omitempty"`      //限购数量
	PromotionType              int64   `protobuf:"varint,40,opt,name=promotion_type,json=promotionType,proto3" json:"promotion_type,omitempty"`                    //促销类型：0->没有促销使用原价;1->使用促销价；2->使用会员价；3->使用阶梯价格；4->使用满减价格；5->限时购
	BrandName                  string  `protobuf:"bytes,41,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`                                 //品牌名称
	ProductCategoryName        string  `protobuf:"bytes,42,opt,name=product_category_name,json=productCategoryName,proto3" json:"product_category_name,omitempty"` //商品分类名称
	CreatedTime                string  `protobuf:"bytes,43,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	UpdateTime                 string  `protobuf:"bytes,44,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_product_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_product_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_product_proto_rawDescGZIP(), []int{0}
}

func (x *Product) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Product) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *Product) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

func (x *Product) GetFeightTemplateId() int64 {
	if x != nil {
		return x.FeightTemplateId
	}
	return 0
}

func (x *Product) GetProductAttributeCategoryId() int64 {
	if x != nil {
		return x.ProductAttributeCategoryId
	}
	return 0
}

func (x *Product) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Product) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *Product) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

func (x *Product) GetDeleteStatus() int64 {
	if x != nil {
		return x.DeleteStatus
	}
	return 0
}

func (x *Product) GetPublishStatus() int64 {
	if x != nil {
		return x.PublishStatus
	}
	return 0
}

func (x *Product) GetNewStatus() int64 {
	if x != nil {
		return x.NewStatus
	}
	return 0
}

func (x *Product) GetRecommandStatus() int64 {
	if x != nil {
		return x.RecommandStatus
	}
	return 0
}

func (x *Product) GetVerifyStatus() int64 {
	if x != nil {
		return x.VerifyStatus
	}
	return 0
}

func (x *Product) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *Product) GetSale() int64 {
	if x != nil {
		return x.Sale
	}
	return 0
}

func (x *Product) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Product) GetPromotionPrice() float32 {
	if x != nil {
		return x.PromotionPrice
	}
	return 0
}

func (x *Product) GetGiftGrowth() int64 {
	if x != nil {
		return x.GiftGrowth
	}
	return 0
}

func (x *Product) GetGiftPoint() int64 {
	if x != nil {
		return x.GiftPoint
	}
	return 0
}

func (x *Product) GetUsePointLimit() int64 {
	if x != nil {
		return x.UsePointLimit
	}
	return 0
}

func (x *Product) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *Product) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Product) GetOriginalPrice() float32 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *Product) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *Product) GetLowStock() int64 {
	if x != nil {
		return x.LowStock
	}
	return 0
}

func (x *Product) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *Product) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Product) GetPreviewStatus() int64 {
	if x != nil {
		return x.PreviewStatus
	}
	return 0
}

func (x *Product) GetServiceIds() string {
	if x != nil {
		return x.ServiceIds
	}
	return ""
}

func (x *Product) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *Product) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *Product) GetAlbumPics() string {
	if x != nil {
		return x.AlbumPics
	}
	return ""
}

func (x *Product) GetDetailTitle() string {
	if x != nil {
		return x.DetailTitle
	}
	return ""
}

func (x *Product) GetDetailDesc() string {
	if x != nil {
		return x.DetailDesc
	}
	return ""
}

func (x *Product) GetDetailHtml() string {
	if x != nil {
		return x.DetailHtml
	}
	return ""
}

func (x *Product) GetDetailMobileHtml() string {
	if x != nil {
		return x.DetailMobileHtml
	}
	return ""
}

func (x *Product) GetPromotionStartTime() string {
	if x != nil {
		return x.PromotionStartTime
	}
	return ""
}

func (x *Product) GetPromotionEndTime() string {
	if x != nil {
		return x.PromotionEndTime
	}
	return ""
}

func (x *Product) GetPromotionPerLimit() int64 {
	if x != nil {
		return x.PromotionPerLimit
	}
	return 0
}

func (x *Product) GetPromotionType() int64 {
	if x != nil {
		return x.PromotionType
	}
	return 0
}

func (x *Product) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *Product) GetProductCategoryName() string {
	if x != nil {
		return x.ProductCategoryName
	}
	return ""
}

func (x *Product) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

func (x *Product) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_product_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_product_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_product_proto_rawDescGZIP(), []int{1}
}

func (x *Error) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type In_GetProductById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *In_GetProductById) Reset() {
	*x = In_GetProductById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_product_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *In_GetProductById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*In_GetProductById) ProtoMessage() {}

func (x *In_GetProductById) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_product_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use In_GetProductById.ProtoReflect.Descriptor instead.
func (*In_GetProductById) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_product_proto_rawDescGZIP(), []int{2}
}

func (x *In_GetProductById) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Out_GetProductById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error          `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Product *ProductDetails `protobuf:"bytes,2,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *Out_GetProductById) Reset() {
	*x = Out_GetProductById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_product_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Out_GetProductById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Out_GetProductById) ProtoMessage() {}

func (x *Out_GetProductById) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_product_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Out_GetProductById.ProtoReflect.Descriptor instead.
func (*Out_GetProductById) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_product_proto_rawDescGZIP(), []int{3}
}

func (x *Out_GetProductById) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Out_GetProductById) GetProduct() *ProductDetails {
	if x != nil {
		return x.Product
	}
	return nil
}

type Out_UpdateProductInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Product *Product `protobuf:"bytes,2,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *Out_UpdateProductInfo) Reset() {
	*x = Out_UpdateProductInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_product_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Out_UpdateProductInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Out_UpdateProductInfo) ProtoMessage() {}

func (x *Out_UpdateProductInfo) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_product_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Out_UpdateProductInfo.ProtoReflect.Descriptor instead.
func (*Out_UpdateProductInfo) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_product_proto_rawDescGZIP(), []int{4}
}

func (x *Out_UpdateProductInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Out_UpdateProductInfo) GetProduct() *Product {
	if x != nil {
		return x.Product
	}
	return nil
}

type In_UpdateProductInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product *ProductDetails `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *In_UpdateProductInfo) Reset() {
	*x = In_UpdateProductInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_product_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *In_UpdateProductInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*In_UpdateProductInfo) ProtoMessage() {}

func (x *In_UpdateProductInfo) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_product_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use In_UpdateProductInfo.ProtoReflect.Descriptor instead.
func (*In_UpdateProductInfo) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_product_proto_rawDescGZIP(), []int{5}
}

func (x *In_UpdateProductInfo) GetProduct() *ProductDetails {
	if x != nil {
		return x.Product
	}
	return nil
}

type In_GetProducts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit     int64  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Pages     int64  `protobuf:"varint,2,opt,name=pages,proto3" json:"pages,omitempty"`
	SearchKey string `protobuf:"bytes,3,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	StartTime string `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   string `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *In_GetProducts) Reset() {
	*x = In_GetProducts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_product_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *In_GetProducts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*In_GetProducts) ProtoMessage() {}

func (x *In_GetProducts) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_product_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use In_GetProducts.ProtoReflect.Descriptor instead.
func (*In_GetProducts) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_product_proto_rawDescGZIP(), []int{6}
}

func (x *In_GetProducts) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *In_GetProducts) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *In_GetProducts) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *In_GetProducts) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *In_GetProducts) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type Out_GetProducts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       *Error     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Limit       int64      `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Pages       int64      `protobuf:"varint,3,opt,name=pages,proto3" json:"pages,omitempty"`
	Total       int64      `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	ProductList []*Product `protobuf:"bytes,5,rep,name=product_list,json=productList,proto3" json:"product_list,omitempty"`
}

func (x *Out_GetProducts) Reset() {
	*x = Out_GetProducts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_product_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Out_GetProducts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Out_GetProducts) ProtoMessage() {}

func (x *Out_GetProducts) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_product_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Out_GetProducts.ProtoReflect.Descriptor instead.
func (*Out_GetProducts) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_product_proto_rawDescGZIP(), []int{7}
}

func (x *Out_GetProducts) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Out_GetProducts) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Out_GetProducts) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *Out_GetProducts) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Out_GetProducts) GetProductList() []*Product {
	if x != nil {
		return x.ProductList
	}
	return nil
}

type In_DeleteProducts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeleteStatus int64    `protobuf:"varint,1,opt,name=delete_status,json=deleteStatus,proto3" json:"delete_status,omitempty"`
	ProductList  []string `protobuf:"bytes,2,rep,name=product_list,json=productList,proto3" json:"product_list,omitempty"`
}

func (x *In_DeleteProducts) Reset() {
	*x = In_DeleteProducts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_product_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *In_DeleteProducts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*In_DeleteProducts) ProtoMessage() {}

func (x *In_DeleteProducts) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_product_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use In_DeleteProducts.ProtoReflect.Descriptor instead.
func (*In_DeleteProducts) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_product_proto_rawDescGZIP(), []int{8}
}

func (x *In_DeleteProducts) GetDeleteStatus() int64 {
	if x != nil {
		return x.DeleteStatus
	}
	return 0
}

func (x *In_DeleteProducts) GetProductList() []string {
	if x != nil {
		return x.ProductList
	}
	return nil
}

type Out_DeleteProducts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Out_DeleteProducts) Reset() {
	*x = Out_DeleteProducts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_product_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Out_DeleteProducts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Out_DeleteProducts) ProtoMessage() {}

func (x *Out_DeleteProducts) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_product_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Out_DeleteProducts.ProtoReflect.Descriptor instead.
func (*Out_DeleteProducts) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_product_proto_rawDescGZIP(), []int{9}
}

func (x *Out_DeleteProducts) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ProductMemberPrice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductId       string  `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"` //品牌ID
	MemberLevelId   int64   `protobuf:"varint,3,opt,name=member_level_id,json=memberLevelId,proto3" json:"member_level_id,omitempty"`
	MemberPrice     float32 `protobuf:"fixed32,4,opt,name=member_price,json=memberPrice,proto3" json:"member_price,omitempty"`
	MemberLevelName string  `protobuf:"bytes,5,opt,name=member_level_name,json=memberLevelName,proto3" json:"member_level_name,omitempty"`
}

func (x *ProductMemberPrice) Reset() {
	*x = ProductMemberPrice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_product_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductMemberPrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductMemberPrice) ProtoMessage() {}

func (x *ProductMemberPrice) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_product_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductMemberPrice.ProtoReflect.Descriptor instead.
func (*ProductMemberPrice) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_product_proto_rawDescGZIP(), []int{10}
}

func (x *ProductMemberPrice) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductMemberPrice) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ProductMemberPrice) GetMemberLevelId() int64 {
	if x != nil {
		return x.MemberLevelId
	}
	return 0
}

func (x *ProductMemberPrice) GetMemberPrice() float32 {
	if x != nil {
		return x.MemberPrice
	}
	return 0
}

func (x *ProductMemberPrice) GetMemberLevelName() string {
	if x != nil {
		return x.MemberLevelName
	}
	return ""
}

type ProductFullReduction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductId   string  `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	FullPrice   float32 `protobuf:"fixed32,3,opt,name=full_price,json=fullPrice,proto3" json:"full_price,omitempty"`
	ReducePrice float32 `protobuf:"fixed32,4,opt,name=reduce_price,json=reducePrice,proto3" json:"reduce_price,omitempty"`
}

func (x *ProductFullReduction) Reset() {
	*x = ProductFullReduction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_product_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductFullReduction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductFullReduction) ProtoMessage() {}

func (x *ProductFullReduction) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_product_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductFullReduction.ProtoReflect.Descriptor instead.
func (*ProductFullReduction) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_product_proto_rawDescGZIP(), []int{11}
}

func (x *ProductFullReduction) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductFullReduction) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ProductFullReduction) GetFullPrice() float32 {
	if x != nil {
		return x.FullPrice
	}
	return 0
}

func (x *ProductFullReduction) GetReducePrice() float32 {
	if x != nil {
		return x.ReducePrice
	}
	return 0
}

type ProductLadder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductId string  `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Count     int64   `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Discount  float32 `protobuf:"fixed32,4,opt,name=discount,proto3" json:"discount,omitempty"`
	Price     float32 `protobuf:"fixed32,5,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *ProductLadder) Reset() {
	*x = ProductLadder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_product_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductLadder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductLadder) ProtoMessage() {}

func (x *ProductLadder) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_product_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductLadder.ProtoReflect.Descriptor instead.
func (*ProductLadder) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_product_proto_rawDescGZIP(), []int{12}
}

func (x *ProductLadder) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductLadder) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ProductLadder) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ProductLadder) GetDiscount() float32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *ProductLadder) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

//sku的库存
type ProductSkuStock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductId      string  `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"` //商品属性id
	SkuCode        string  `protobuf:"bytes,3,opt,name=sku_code,json=skuCode,proto3" json:"sku_code,omitempty"`       //sku编码
	Price          float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`                        //价格
	Stock          int64   `protobuf:"varint,5,opt,name=stock,proto3" json:"stock,omitempty"`                         //库存
	Sp1            string  `protobuf:"bytes,6,opt,name=sp1,proto3" json:"sp1,omitempty"`                              //销售属性1
	Sp2            string  `protobuf:"bytes,7,opt,name=sp2,proto3" json:"sp2,omitempty"`                              //销售属性2
	Sp3            string  `protobuf:"bytes,8,opt,name=sp3,proto3" json:"sp3,omitempty"`                              //销售属性3
	Pic            string  `protobuf:"bytes,9,opt,name=pic,proto3" json:"pic,omitempty"`                              //展示图片
	Sale           int64   `protobuf:"varint,10,opt,name=sale,proto3" json:"sale,omitempty"`
	PromotionPrice float32 `protobuf:"fixed32,11,opt,name=promotion_price,json=promotionPrice,proto3" json:"promotion_price,omitempty"` //单品促销价格
	LockStock      int64   `protobuf:"varint,12,opt,name=lock_stock,json=lockStock,proto3" json:"lock_stock,omitempty"`                 //锁定库存
	LowStock       int64   `protobuf:"varint,13,opt,name=low_stock,json=lowStock,proto3" json:"low_stock,omitempty"`                    //预警数量
}

func (x *ProductSkuStock) Reset() {
	*x = ProductSkuStock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_product_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSkuStock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSkuStock) ProtoMessage() {}

func (x *ProductSkuStock) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_product_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSkuStock.ProtoReflect.Descriptor instead.
func (*ProductSkuStock) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_product_proto_rawDescGZIP(), []int{13}
}

func (x *ProductSkuStock) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductSkuStock) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ProductSkuStock) GetSkuCode() string {
	if x != nil {
		return x.SkuCode
	}
	return ""
}

func (x *ProductSkuStock) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ProductSkuStock) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *ProductSkuStock) GetSp1() string {
	if x != nil {
		return x.Sp1
	}
	return ""
}

func (x *ProductSkuStock) GetSp2() string {
	if x != nil {
		return x.Sp2
	}
	return ""
}

func (x *ProductSkuStock) GetSp3() string {
	if x != nil {
		return x.Sp3
	}
	return ""
}

func (x *ProductSkuStock) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *ProductSkuStock) GetSale() int64 {
	if x != nil {
		return x.Sale
	}
	return 0
}

func (x *ProductSkuStock) GetPromotionPrice() float32 {
	if x != nil {
		return x.PromotionPrice
	}
	return 0
}

func (x *ProductSkuStock) GetLockStock() int64 {
	if x != nil {
		return x.LockStock
	}
	return 0
}

func (x *ProductSkuStock) GetLowStock() int64 {
	if x != nil {
		return x.LowStock
	}
	return 0
}

type ProductAttributeValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductId          string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProductAttributeId int64  `protobuf:"varint,3,opt,name=product_attribute_id,json=productAttributeId,proto3" json:"product_attribute_id,omitempty"`
	Value              string `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ProductAttributeValue) Reset() {
	*x = ProductAttributeValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_product_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeValue) ProtoMessage() {}

func (x *ProductAttributeValue) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_product_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeValue.ProtoReflect.Descriptor instead.
func (*ProductAttributeValue) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_product_proto_rawDescGZIP(), []int{14}
}

func (x *ProductAttributeValue) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductAttributeValue) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ProductAttributeValue) GetProductAttributeId() int64 {
	if x != nil {
		return x.ProductAttributeId
	}
	return 0
}

func (x *ProductAttributeValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ProductDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product                   *Product                 `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	ProductMemberPriceList    []*ProductMemberPrice    `protobuf:"bytes,2,rep,name=productMemberPriceList,proto3" json:"productMemberPriceList,omitempty"`
	ProductFullReductionList  []*ProductFullReduction  `protobuf:"bytes,3,rep,name=productFullReductionList,proto3" json:"productFullReductionList,omitempty"`
	ProductLadderList         []*ProductLadder         `protobuf:"bytes,4,rep,name=productLadderList,proto3" json:"productLadderList,omitempty"`
	ProductSkuStockList       []*ProductSkuStock       `protobuf:"bytes,5,rep,name=productSkuStockList,proto3" json:"productSkuStockList,omitempty"`
	ProductAttributeValueList []*ProductAttributeValue `protobuf:"bytes,6,rep,name=productAttributeValueList,proto3" json:"productAttributeValueList,omitempty"`
}

func (x *ProductDetails) Reset() {
	*x = ProductDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_product_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductDetails) ProtoMessage() {}

func (x *ProductDetails) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_product_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductDetails.ProtoReflect.Descriptor instead.
func (*ProductDetails) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_product_proto_rawDescGZIP(), []int{15}
}

func (x *ProductDetails) GetProduct() *Product {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *ProductDetails) GetProductMemberPriceList() []*ProductMemberPrice {
	if x != nil {
		return x.ProductMemberPriceList
	}
	return nil
}

func (x *ProductDetails) GetProductFullReductionList() []*ProductFullReduction {
	if x != nil {
		return x.ProductFullReductionList
	}
	return nil
}

func (x *ProductDetails) GetProductLadderList() []*ProductLadder {
	if x != nil {
		return x.ProductLadderList
	}
	return nil
}

func (x *ProductDetails) GetProductSkuStockList() []*ProductSkuStock {
	if x != nil {
		return x.ProductSkuStockList
	}
	return nil
}

func (x *ProductDetails) GetProductAttributeValueList() []*ProductAttributeValue {
	if x != nil {
		return x.ProductAttributeValueList
	}
	return nil
}

type In_CreateProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductDetail *ProductDetails `protobuf:"bytes,1,opt,name=productDetail,proto3" json:"productDetail,omitempty"`
}

func (x *In_CreateProduct) Reset() {
	*x = In_CreateProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_product_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *In_CreateProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*In_CreateProduct) ProtoMessage() {}

func (x *In_CreateProduct) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_product_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use In_CreateProduct.ProtoReflect.Descriptor instead.
func (*In_CreateProduct) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_product_proto_rawDescGZIP(), []int{16}
}

func (x *In_CreateProduct) GetProductDetail() *ProductDetails {
	if x != nil {
		return x.ProductDetail
	}
	return nil
}

type Out_CreateProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error         *Error          `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ProductDetail *ProductDetails `protobuf:"bytes,2,opt,name=productDetail,proto3" json:"productDetail,omitempty"`
}

func (x *Out_CreateProduct) Reset() {
	*x = Out_CreateProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_product_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Out_CreateProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Out_CreateProduct) ProtoMessage() {}

func (x *Out_CreateProduct) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_product_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Out_CreateProduct.ProtoReflect.Descriptor instead.
func (*Out_CreateProduct) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_product_proto_rawDescGZIP(), []int{17}
}

func (x *Out_CreateProduct) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Out_CreateProduct) GetProductDetail() *ProductDetails {
	if x != nil {
		return x.ProductDetail
	}
	return nil
}

var File_modules_inventory_product_product_proto protoreflect.FileDescriptor

var file_modules_inventory_product_product_proto_rawDesc = []byte{
	0x0a, 0x27, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x22, 0xe1, 0x0b, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x66, 0x65, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x63,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6e,
	0x65, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x6e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x61, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x61,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x69, 0x66, 0x74, 0x47, 0x72, 0x6f, 0x77,
	0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x69, 0x66, 0x74, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75,
	0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f,
	0x70, 0x69, 0x63, 0x73, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x62, 0x75,
	0x6d, 0x50, 0x69, 0x63, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x5f, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x68, 0x74, 0x6d, 0x6c,
	0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x27, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x29, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32,
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x23, 0x0a,
	0x11, 0x49, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x6d, 0x0a, 0x12, 0x4f, 0x75, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x31,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x22, 0x69, 0x0a, 0x15, 0x4f, 0x75, 0x74, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x2a, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x49, 0x0a, 0x14,
	0x49, 0x6e, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x95, 0x01, 0x0a, 0x0e, 0x49, 0x6e, 0x5f, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0xae, 0x01, 0x0a, 0x0f, 0x4f, 0x75, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x33, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x5b, 0x0a, 0x11, 0x49, 0x6e, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3a, 0x0a,
	0x12, 0x4f, 0x75, 0x74, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xbc, 0x01, 0x0a, 0x14, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x16, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x6c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0xca,
	0x02, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x70,
	0x31, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x70, 0x31, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x70, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x70, 0x32, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x70, 0x33, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x70, 0x33,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70,
	0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x61, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x22, 0x90, 0x01, 0x0a, 0x17,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe5,
	0x03, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x2a, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x55, 0x0a,
	0x16, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x52, 0x16, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x18, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46,
	0x75, 0x6c, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x72, 0x65,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x18, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x45, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x61, 0x64, 0x64,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6c,
	0x61, 0x64, 0x64, 0x65, 0x72, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x61,
	0x64, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x5e, 0x0a, 0x19, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x19, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x51, 0x0a, 0x10, 0x49, 0x6e, 0x5f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x3d, 0x0a, 0x0d, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x78, 0x0a, 0x11, 0x4f, 0x75, 0x74,
	0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x24,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x3d, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x32, 0x8e, 0x03, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x4b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x49, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4f,
	0x75, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x49, 0x6e, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x4f, 0x75, 0x74, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x49, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4f, 0x75, 0x74, 0x5f,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0x00, 0x12, 0x4b, 0x0a,
	0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x49, 0x6e, 0x5f, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x1a, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4f, 0x75, 0x74, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x49, 0x6e, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x4f, 0x75, 0x74, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x22, 0x00, 0x42, 0x4a, 0x0a, 0x23, 0x63, 0x6f, 0x6d, 0x2e, 0x71, 0x69, 0x61, 0x6e,
	0x78, 0x75, 0x6e, 0x6b, 0x65, 0x2e, 0x65, 0x67, 0x6f, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x07, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x50, 0x01, 0x5a, 0x18, 0x67, 0x6f, 0x5f, 0x6f, 0x75, 0x74, 0x2f, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_modules_inventory_product_product_proto_rawDescOnce sync.Once
	file_modules_inventory_product_product_proto_rawDescData = file_modules_inventory_product_product_proto_rawDesc
)

func file_modules_inventory_product_product_proto_rawDescGZIP() []byte {
	file_modules_inventory_product_product_proto_rawDescOnce.Do(func() {
		file_modules_inventory_product_product_proto_rawDescData = protoimpl.X.CompressGZIP(file_modules_inventory_product_product_proto_rawDescData)
	})
	return file_modules_inventory_product_product_proto_rawDescData
}

var file_modules_inventory_product_product_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_modules_inventory_product_product_proto_goTypes = []interface{}{
	(*Product)(nil),               // 0: product.Product
	(*Error)(nil),                 // 1: product.Error
	(*In_GetProductById)(nil),     // 2: product.In_GetProductById
	(*Out_GetProductById)(nil),    // 3: product.Out_GetProductById
	(*Out_UpdateProductInfo)(nil), // 4: product.Out_UpdateProductInfo
	(*In_UpdateProductInfo)(nil),  // 5: product.In_UpdateProductInfo
	(*In_GetProducts)(nil),        // 6: product.In_GetProducts
	(*Out_GetProducts)(nil),       // 7: product.Out_GetProducts
	(*In_DeleteProducts)(nil),     // 8: product.In_DeleteProducts
	(*Out_DeleteProducts)(nil),    // 9: product.Out_DeleteProducts
	(*ProductMemberPrice)(nil),    // 10: product.Product_member_price
	(*ProductFullReduction)(nil),  // 11: product.Product_full_reduction
	(*ProductLadder)(nil),         // 12: product.Product_ladder
	(*ProductSkuStock)(nil),       // 13: product.Product_sku_stock
	(*ProductAttributeValue)(nil), // 14: product.Product_attribute_value
	(*ProductDetails)(nil),        // 15: product.ProductDetails
	(*In_CreateProduct)(nil),      // 16: product.In_CreateProduct
	(*Out_CreateProduct)(nil),     // 17: product.Out_CreateProduct
}
var file_modules_inventory_product_product_proto_depIdxs = []int32{
	1,  // 0: product.Out_GetProductById.error:type_name -> product.Error
	15, // 1: product.Out_GetProductById.product:type_name -> product.ProductDetails
	1,  // 2: product.Out_UpdateProductInfo.error:type_name -> product.Error
	0,  // 3: product.Out_UpdateProductInfo.product:type_name -> product.Product
	15, // 4: product.In_UpdateProductInfo.product:type_name -> product.ProductDetails
	1,  // 5: product.Out_GetProducts.error:type_name -> product.Error
	0,  // 6: product.Out_GetProducts.product_list:type_name -> product.Product
	1,  // 7: product.Out_DeleteProducts.error:type_name -> product.Error
	0,  // 8: product.ProductDetails.product:type_name -> product.Product
	10, // 9: product.ProductDetails.productMemberPriceList:type_name -> product.Product_member_price
	11, // 10: product.ProductDetails.productFullReductionList:type_name -> product.Product_full_reduction
	12, // 11: product.ProductDetails.productLadderList:type_name -> product.Product_ladder
	13, // 12: product.ProductDetails.productSkuStockList:type_name -> product.Product_sku_stock
	14, // 13: product.ProductDetails.productAttributeValueList:type_name -> product.Product_attribute_value
	15, // 14: product.In_CreateProduct.productDetail:type_name -> product.ProductDetails
	1,  // 15: product.Out_CreateProduct.error:type_name -> product.Error
	15, // 16: product.Out_CreateProduct.productDetail:type_name -> product.ProductDetails
	2,  // 17: product.ProductHandler.GetProductById:input_type -> product.In_GetProductById
	5,  // 18: product.ProductHandler.UpdateProductInfo:input_type -> product.In_UpdateProductInfo
	6,  // 19: product.ProductHandler.GetProducts:input_type -> product.In_GetProducts
	8,  // 20: product.ProductHandler.DeleteProducts:input_type -> product.In_DeleteProducts
	16, // 21: product.ProductHandler.CreateProduct:input_type -> product.In_CreateProduct
	3,  // 22: product.ProductHandler.GetProductById:output_type -> product.Out_GetProductById
	4,  // 23: product.ProductHandler.UpdateProductInfo:output_type -> product.Out_UpdateProductInfo
	7,  // 24: product.ProductHandler.GetProducts:output_type -> product.Out_GetProducts
	9,  // 25: product.ProductHandler.DeleteProducts:output_type -> product.Out_DeleteProducts
	17, // 26: product.ProductHandler.CreateProduct:output_type -> product.Out_CreateProduct
	22, // [22:27] is the sub-list for method output_type
	17, // [17:22] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_modules_inventory_product_product_proto_init() }
func file_modules_inventory_product_product_proto_init() {
	if File_modules_inventory_product_product_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_modules_inventory_product_product_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_product_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_product_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*In_GetProductById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_product_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Out_GetProductById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_product_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Out_UpdateProductInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_product_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*In_UpdateProductInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_product_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*In_GetProducts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_product_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Out_GetProducts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_product_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*In_DeleteProducts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_product_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Out_DeleteProducts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_product_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductMemberPrice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_product_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductFullReduction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_product_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductLadder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_product_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSkuStock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_product_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_product_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_product_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*In_CreateProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_product_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Out_CreateProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_modules_inventory_product_product_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_modules_inventory_product_product_proto_goTypes,
		DependencyIndexes: file_modules_inventory_product_product_proto_depIdxs,
		MessageInfos:      file_modules_inventory_product_product_proto_msgTypes,
	}.Build()
	File_modules_inventory_product_product_proto = out.File
	file_modules_inventory_product_product_proto_rawDesc = nil
	file_modules_inventory_product_product_proto_goTypes = nil
	file_modules_inventory_product_product_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProductHandlerClient is the client API for ProductHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProductHandlerClient interface {
	//获取信息
	GetProductById(ctx context.Context, in *In_GetProductById, opts ...grpc.CallOption) (*Out_GetProductById, error)
	//修改信息
	UpdateProductInfo(ctx context.Context, in *In_UpdateProductInfo, opts ...grpc.CallOption) (*Out_UpdateProductInfo, error)
	//获取列表
	GetProducts(ctx context.Context, in *In_GetProducts, opts ...grpc.CallOption) (*Out_GetProducts, error)
	//删除列表
	DeleteProducts(ctx context.Context, in *In_DeleteProducts, opts ...grpc.CallOption) (*Out_DeleteProducts, error)
	//新建信息
	CreateProduct(ctx context.Context, in *In_CreateProduct, opts ...grpc.CallOption) (*Out_CreateProduct, error)
}

type productHandlerClient struct {
	cc grpc.ClientConnInterface
}

func NewProductHandlerClient(cc grpc.ClientConnInterface) ProductHandlerClient {
	return &productHandlerClient{cc}
}

func (c *productHandlerClient) GetProductById(ctx context.Context, in *In_GetProductById, opts ...grpc.CallOption) (*Out_GetProductById, error) {
	out := new(Out_GetProductById)
	err := c.cc.Invoke(ctx, "/product.ProductHandler/GetProductById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productHandlerClient) UpdateProductInfo(ctx context.Context, in *In_UpdateProductInfo, opts ...grpc.CallOption) (*Out_UpdateProductInfo, error) {
	out := new(Out_UpdateProductInfo)
	err := c.cc.Invoke(ctx, "/product.ProductHandler/UpdateProductInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productHandlerClient) GetProducts(ctx context.Context, in *In_GetProducts, opts ...grpc.CallOption) (*Out_GetProducts, error) {
	out := new(Out_GetProducts)
	err := c.cc.Invoke(ctx, "/product.ProductHandler/GetProducts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productHandlerClient) DeleteProducts(ctx context.Context, in *In_DeleteProducts, opts ...grpc.CallOption) (*Out_DeleteProducts, error) {
	out := new(Out_DeleteProducts)
	err := c.cc.Invoke(ctx, "/product.ProductHandler/DeleteProducts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productHandlerClient) CreateProduct(ctx context.Context, in *In_CreateProduct, opts ...grpc.CallOption) (*Out_CreateProduct, error) {
	out := new(Out_CreateProduct)
	err := c.cc.Invoke(ctx, "/product.ProductHandler/CreateProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProductHandlerServer is the server API for ProductHandler service.
type ProductHandlerServer interface {
	//获取信息
	GetProductById(context.Context, *In_GetProductById) (*Out_GetProductById, error)
	//修改信息
	UpdateProductInfo(context.Context, *In_UpdateProductInfo) (*Out_UpdateProductInfo, error)
	//获取列表
	GetProducts(context.Context, *In_GetProducts) (*Out_GetProducts, error)
	//删除列表
	DeleteProducts(context.Context, *In_DeleteProducts) (*Out_DeleteProducts, error)
	//新建信息
	CreateProduct(context.Context, *In_CreateProduct) (*Out_CreateProduct, error)
}

// UnimplementedProductHandlerServer can be embedded to have forward compatible implementations.
type UnimplementedProductHandlerServer struct {
}

func (*UnimplementedProductHandlerServer) GetProductById(context.Context, *In_GetProductById) (*Out_GetProductById, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProductById not implemented")
}
func (*UnimplementedProductHandlerServer) UpdateProductInfo(context.Context, *In_UpdateProductInfo) (*Out_UpdateProductInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProductInfo not implemented")
}
func (*UnimplementedProductHandlerServer) GetProducts(context.Context, *In_GetProducts) (*Out_GetProducts, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProducts not implemented")
}
func (*UnimplementedProductHandlerServer) DeleteProducts(context.Context, *In_DeleteProducts) (*Out_DeleteProducts, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProducts not implemented")
}
func (*UnimplementedProductHandlerServer) CreateProduct(context.Context, *In_CreateProduct) (*Out_CreateProduct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProduct not implemented")
}

func RegisterProductHandlerServer(s *grpc.Server, srv ProductHandlerServer) {
	s.RegisterService(&_ProductHandler_serviceDesc, srv)
}

func _ProductHandler_GetProductById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(In_GetProductById)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductHandlerServer).GetProductById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.ProductHandler/GetProductById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductHandlerServer).GetProductById(ctx, req.(*In_GetProductById))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductHandler_UpdateProductInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(In_UpdateProductInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductHandlerServer).UpdateProductInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.ProductHandler/UpdateProductInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductHandlerServer).UpdateProductInfo(ctx, req.(*In_UpdateProductInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductHandler_GetProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(In_GetProducts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductHandlerServer).GetProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.ProductHandler/GetProducts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductHandlerServer).GetProducts(ctx, req.(*In_GetProducts))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductHandler_DeleteProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(In_DeleteProducts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductHandlerServer).DeleteProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.ProductHandler/DeleteProducts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductHandlerServer).DeleteProducts(ctx, req.(*In_DeleteProducts))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductHandler_CreateProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(In_CreateProduct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductHandlerServer).CreateProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.ProductHandler/CreateProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductHandlerServer).CreateProduct(ctx, req.(*In_CreateProduct))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProductHandler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "product.ProductHandler",
	HandlerType: (*ProductHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProductById",
			Handler:    _ProductHandler_GetProductById_Handler,
		},
		{
			MethodName: "UpdateProductInfo",
			Handler:    _ProductHandler_UpdateProductInfo_Handler,
		},
		{
			MethodName: "GetProducts",
			Handler:    _ProductHandler_GetProducts_Handler,
		},
		{
			MethodName: "DeleteProducts",
			Handler:    _ProductHandler_DeleteProducts_Handler,
		},
		{
			MethodName: "CreateProduct",
			Handler:    _ProductHandler_CreateProduct_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "modules/inventory/product/product.proto",
}
