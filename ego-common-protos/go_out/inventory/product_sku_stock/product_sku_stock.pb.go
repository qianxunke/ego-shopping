// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.10.1
// source: modules/inventory/product_sku_stock/product_sku_stock.proto

package product_sku_stock

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//sku的库存
type ProductSkuStock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductId      string  `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"` //商品属性id
	SkuCode        string  `protobuf:"bytes,3,opt,name=sku_code,json=skuCode,proto3" json:"sku_code,omitempty"`       //sku编码
	Price          float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`                        //价格
	Stock          int64   `protobuf:"varint,5,opt,name=stock,proto3" json:"stock,omitempty"`                         //库存
	Sp1            string  `protobuf:"bytes,6,opt,name=sp1,proto3" json:"sp1,omitempty"`                              //销售属性1
	Sp2            string  `protobuf:"bytes,7,opt,name=sp2,proto3" json:"sp2,omitempty"`                              //销售属性2
	Sp3            string  `protobuf:"bytes,8,opt,name=sp3,proto3" json:"sp3,omitempty"`                              //销售属性3
	Pic            string  `protobuf:"bytes,9,opt,name=pic,proto3" json:"pic,omitempty"`                              //展示图片
	Sale           int64   `protobuf:"varint,10,opt,name=sale,proto3" json:"sale,omitempty"`
	PromotionPrice float32 `protobuf:"fixed32,11,opt,name=promotion_price,json=promotionPrice,proto3" json:"promotion_price,omitempty"` //单品促销价格
	LockStock      int64   `protobuf:"varint,12,opt,name=lock_stock,json=lockStock,proto3" json:"lock_stock,omitempty"`                 //锁定库存
	LowStock       int64   `protobuf:"varint,13,opt,name=low_stock,json=lowStock,proto3" json:"low_stock,omitempty"`                    //预警数量
}

func (x *ProductSkuStock) Reset() {
	*x = ProductSkuStock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSkuStock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSkuStock) ProtoMessage() {}

func (x *ProductSkuStock) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSkuStock.ProtoReflect.Descriptor instead.
func (*ProductSkuStock) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDescGZIP(), []int{0}
}

func (x *ProductSkuStock) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductSkuStock) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ProductSkuStock) GetSkuCode() string {
	if x != nil {
		return x.SkuCode
	}
	return ""
}

func (x *ProductSkuStock) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ProductSkuStock) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *ProductSkuStock) GetSp1() string {
	if x != nil {
		return x.Sp1
	}
	return ""
}

func (x *ProductSkuStock) GetSp2() string {
	if x != nil {
		return x.Sp2
	}
	return ""
}

func (x *ProductSkuStock) GetSp3() string {
	if x != nil {
		return x.Sp3
	}
	return ""
}

func (x *ProductSkuStock) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *ProductSkuStock) GetSale() int64 {
	if x != nil {
		return x.Sale
	}
	return 0
}

func (x *ProductSkuStock) GetPromotionPrice() float32 {
	if x != nil {
		return x.PromotionPrice
	}
	return 0
}

func (x *ProductSkuStock) GetLockStock() int64 {
	if x != nil {
		return x.LockStock
	}
	return 0
}

func (x *ProductSkuStock) GetLowStock() int64 {
	if x != nil {
		return x.LowStock
	}
	return 0
}

type SkuOutLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductId   string  `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"` //商品id
	MemberId    int64   `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`   //
	SellNum     int64   `protobuf:"varint,4,opt,name=sell_num,json=sellNum,proto3" json:"sell_num,omitempty"`
	SkuId       int64   `protobuf:"varint,5,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	OrderId     int64   `protobuf:"varint,6,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	SkuPrice    float32 `protobuf:"fixed32,7,opt,name=sku_price,json=skuPrice,proto3" json:"sku_price,omitempty"`
	TotalAmount float32 `protobuf:"fixed32,8,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	CreateTime  string  `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *SkuOutLog) Reset() {
	*x = SkuOutLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuOutLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuOutLog) ProtoMessage() {}

func (x *SkuOutLog) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuOutLog.ProtoReflect.Descriptor instead.
func (*SkuOutLog) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDescGZIP(), []int{1}
}

func (x *SkuOutLog) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SkuOutLog) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *SkuOutLog) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *SkuOutLog) GetSellNum() int64 {
	if x != nil {
		return x.SellNum
	}
	return 0
}

func (x *SkuOutLog) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *SkuOutLog) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *SkuOutLog) GetSkuPrice() float32 {
	if x != nil {
		return x.SkuPrice
	}
	return 0
}

func (x *SkuOutLog) GetTotalAmount() float32 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *SkuOutLog) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDescGZIP(), []int{2}
}

func (x *Error) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type In_GetProductSkuStockById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *In_GetProductSkuStockById) Reset() {
	*x = In_GetProductSkuStockById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *In_GetProductSkuStockById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*In_GetProductSkuStockById) ProtoMessage() {}

func (x *In_GetProductSkuStockById) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use In_GetProductSkuStockById.ProtoReflect.Descriptor instead.
func (*In_GetProductSkuStockById) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDescGZIP(), []int{3}
}

func (x *In_GetProductSkuStockById) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Out_GetProductSkuStockById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error           *Error           `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ProductSkuStock *ProductSkuStock `protobuf:"bytes,2,opt,name=product_sku_stock,json=productSkuStock,proto3" json:"product_sku_stock,omitempty"`
}

func (x *Out_GetProductSkuStockById) Reset() {
	*x = Out_GetProductSkuStockById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Out_GetProductSkuStockById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Out_GetProductSkuStockById) ProtoMessage() {}

func (x *Out_GetProductSkuStockById) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Out_GetProductSkuStockById.ProtoReflect.Descriptor instead.
func (*Out_GetProductSkuStockById) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDescGZIP(), []int{4}
}

func (x *Out_GetProductSkuStockById) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Out_GetProductSkuStockById) GetProductSkuStock() *ProductSkuStock {
	if x != nil {
		return x.ProductSkuStock
	}
	return nil
}

type Out_UpdateProductSkuStockInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error           *Error           `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ProductSkuStock *ProductSkuStock `protobuf:"bytes,2,opt,name=product_sku_stock,json=productSkuStock,proto3" json:"product_sku_stock,omitempty"`
}

func (x *Out_UpdateProductSkuStockInfo) Reset() {
	*x = Out_UpdateProductSkuStockInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Out_UpdateProductSkuStockInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Out_UpdateProductSkuStockInfo) ProtoMessage() {}

func (x *Out_UpdateProductSkuStockInfo) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Out_UpdateProductSkuStockInfo.ProtoReflect.Descriptor instead.
func (*Out_UpdateProductSkuStockInfo) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDescGZIP(), []int{5}
}

func (x *Out_UpdateProductSkuStockInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Out_UpdateProductSkuStockInfo) GetProductSkuStock() *ProductSkuStock {
	if x != nil {
		return x.ProductSkuStock
	}
	return nil
}

type In_UpdateProductSkuStockInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductSkuStock *ProductSkuStock `protobuf:"bytes,1,opt,name=product_sku_stock,json=productSkuStock,proto3" json:"product_sku_stock,omitempty"`
}

func (x *In_UpdateProductSkuStockInfo) Reset() {
	*x = In_UpdateProductSkuStockInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *In_UpdateProductSkuStockInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*In_UpdateProductSkuStockInfo) ProtoMessage() {}

func (x *In_UpdateProductSkuStockInfo) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use In_UpdateProductSkuStockInfo.ProtoReflect.Descriptor instead.
func (*In_UpdateProductSkuStockInfo) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDescGZIP(), []int{6}
}

func (x *In_UpdateProductSkuStockInfo) GetProductSkuStock() *ProductSkuStock {
	if x != nil {
		return x.ProductSkuStock
	}
	return nil
}

type In_GetProductSkuStocks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *In_GetProductSkuStocks) Reset() {
	*x = In_GetProductSkuStocks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *In_GetProductSkuStocks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*In_GetProductSkuStocks) ProtoMessage() {}

func (x *In_GetProductSkuStocks) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use In_GetProductSkuStocks.ProtoReflect.Descriptor instead.
func (*In_GetProductSkuStocks) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDescGZIP(), []int{7}
}

func (x *In_GetProductSkuStocks) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type Out_GetProductSkuStocks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error               *Error             `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Limit               int64              `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Pages               int64              `protobuf:"varint,3,opt,name=pages,proto3" json:"pages,omitempty"`
	Total               int64              `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	ProductSkuStockList []*ProductSkuStock `protobuf:"bytes,5,rep,name=product_sku_stock_list,json=productSkuStockList,proto3" json:"product_sku_stock_list,omitempty"`
}

func (x *Out_GetProductSkuStocks) Reset() {
	*x = Out_GetProductSkuStocks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Out_GetProductSkuStocks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Out_GetProductSkuStocks) ProtoMessage() {}

func (x *Out_GetProductSkuStocks) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Out_GetProductSkuStocks.ProtoReflect.Descriptor instead.
func (*Out_GetProductSkuStocks) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDescGZIP(), []int{8}
}

func (x *Out_GetProductSkuStocks) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Out_GetProductSkuStocks) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Out_GetProductSkuStocks) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *Out_GetProductSkuStocks) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Out_GetProductSkuStocks) GetProductSkuStockList() []*ProductSkuStock {
	if x != nil {
		return x.ProductSkuStockList
	}
	return nil
}

type In_DeleteProductSkuStocks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductSkuStockList []int64 `protobuf:"varint,1,rep,packed,name=product_sku_stock_list,json=productSkuStockList,proto3" json:"product_sku_stock_list,omitempty"`
}

func (x *In_DeleteProductSkuStocks) Reset() {
	*x = In_DeleteProductSkuStocks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *In_DeleteProductSkuStocks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*In_DeleteProductSkuStocks) ProtoMessage() {}

func (x *In_DeleteProductSkuStocks) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use In_DeleteProductSkuStocks.ProtoReflect.Descriptor instead.
func (*In_DeleteProductSkuStocks) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDescGZIP(), []int{9}
}

func (x *In_DeleteProductSkuStocks) GetProductSkuStockList() []int64 {
	if x != nil {
		return x.ProductSkuStockList
	}
	return nil
}

type Out_DeleteProductSkuStocks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Out_DeleteProductSkuStocks) Reset() {
	*x = Out_DeleteProductSkuStocks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Out_DeleteProductSkuStocks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Out_DeleteProductSkuStocks) ProtoMessage() {}

func (x *Out_DeleteProductSkuStocks) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Out_DeleteProductSkuStocks.ProtoReflect.Descriptor instead.
func (*Out_DeleteProductSkuStocks) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDescGZIP(), []int{10}
}

func (x *Out_DeleteProductSkuStocks) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type In_CreateProductSkuStock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductSkuStock *ProductSkuStock `protobuf:"bytes,1,opt,name=product_sku_stock,json=productSkuStock,proto3" json:"product_sku_stock,omitempty"`
}

func (x *In_CreateProductSkuStock) Reset() {
	*x = In_CreateProductSkuStock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *In_CreateProductSkuStock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*In_CreateProductSkuStock) ProtoMessage() {}

func (x *In_CreateProductSkuStock) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use In_CreateProductSkuStock.ProtoReflect.Descriptor instead.
func (*In_CreateProductSkuStock) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDescGZIP(), []int{11}
}

func (x *In_CreateProductSkuStock) GetProductSkuStock() *ProductSkuStock {
	if x != nil {
		return x.ProductSkuStock
	}
	return nil
}

type Out_CreateProductSkuStock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error           *Error           `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ProductSkuStock *ProductSkuStock `protobuf:"bytes,2,opt,name=product_sku_stock,json=productSkuStock,proto3" json:"product_sku_stock,omitempty"`
}

func (x *Out_CreateProductSkuStock) Reset() {
	*x = Out_CreateProductSkuStock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Out_CreateProductSkuStock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Out_CreateProductSkuStock) ProtoMessage() {}

func (x *Out_CreateProductSkuStock) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Out_CreateProductSkuStock.ProtoReflect.Descriptor instead.
func (*Out_CreateProductSkuStock) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDescGZIP(), []int{12}
}

func (x *Out_CreateProductSkuStock) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Out_CreateProductSkuStock) GetProductSkuStock() *ProductSkuStock {
	if x != nil {
		return x.ProductSkuStock
	}
	return nil
}

//拿库存
type In_GetSellSkuStock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MemberId  int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	ProductId string `protobuf:"bytes,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	SellNum   int64  `protobuf:"varint,4,opt,name=sell_num,json=sellNum,proto3" json:"sell_num,omitempty"`
}

func (x *In_GetSellSkuStock) Reset() {
	*x = In_GetSellSkuStock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *In_GetSellSkuStock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*In_GetSellSkuStock) ProtoMessage() {}

func (x *In_GetSellSkuStock) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use In_GetSellSkuStock.ProtoReflect.Descriptor instead.
func (*In_GetSellSkuStock) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDescGZIP(), []int{13}
}

func (x *In_GetSellSkuStock) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *In_GetSellSkuStock) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *In_GetSellSkuStock) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *In_GetSellSkuStock) GetSellNum() int64 {
	if x != nil {
		return x.SellNum
	}
	return 0
}

type Out_GetSellSkuStock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuOutLog *SkuOutLog `protobuf:"bytes,1,opt,name=sku_out_log,json=skuOutLog,proto3" json:"sku_out_log,omitempty"`
	Error     *Error     `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Out_GetSellSkuStock) Reset() {
	*x = Out_GetSellSkuStock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Out_GetSellSkuStock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Out_GetSellSkuStock) ProtoMessage() {}

func (x *Out_GetSellSkuStock) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Out_GetSellSkuStock.ProtoReflect.Descriptor instead.
func (*Out_GetSellSkuStock) Descriptor() ([]byte, []int) {
	return file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDescGZIP(), []int{14}
}

func (x *Out_GetSellSkuStock) GetSkuOutLog() *SkuOutLog {
	if x != nil {
		return x.SkuOutLog
	}
	return nil
}

func (x *Out_GetSellSkuStock) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_modules_inventory_product_sku_stock_product_sku_stock_proto protoreflect.FileDescriptor

var file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDesc = []byte{
	0x0a, 0x3b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b,
	0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x22, 0xca, 0x02, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75,
	0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x70, 0x31, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x70, 0x31, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x70, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x70, 0x32,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x70, 0x33, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x70, 0x33, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x70, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x22, 0x87, 0x02,
	0x0a, 0x0b, 0x53, 0x6b, 0x75, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x6c,
	0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65, 0x6c,
	0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6b, 0x75, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x73, 0x6b, 0x75, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2b,
	0x0a, 0x19, 0x49, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x1a,
	0x4f, 0x75, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b,
	0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x50, 0x0a, 0x11, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x0f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x22, 0xa1, 0x01, 0x0a,
	0x1d, 0x4f, 0x75, 0x74, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x50,
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x52,
	0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x22, 0x70, 0x0a, 0x1c, 0x49, 0x6e, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x50, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x22, 0x37, 0x0a, 0x16, 0x49, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x17,
	0x4f, 0x75, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b,
	0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x59, 0x0a, 0x16, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x52,
	0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x19, 0x49, 0x6e, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x73, 0x12, 0x33, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75,
	0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4c, 0x0a, 0x1a, 0x4f, 0x75, 0x74, 0x5f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b,
	0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x6c, 0x0a, 0x18, 0x49, 0x6e, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x12, 0x50, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x22, 0x9d, 0x01, 0x0a, 0x19, 0x4f, 0x75, 0x74, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x50, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x22, 0x7b, 0x0a, 0x12, 0x49, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x6c,
	0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65, 0x6c, 0x6c, 0x4e, 0x75, 0x6d, 0x22,
	0x85, 0x01, 0x0a, 0x13, 0x4f, 0x75, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x53,
	0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x3e, 0x0a, 0x0b, 0x73, 0x6b, 0x75, 0x5f, 0x6f,
	0x75, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x2e, 0x53, 0x6b, 0x75, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x52, 0x09, 0x73, 0x6b,
	0x75, 0x4f, 0x75, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xd7, 0x05, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x12, 0x77, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2c, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x2e, 0x49, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b,
	0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x2d, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x4f,
	0x75, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x19,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x49, 0x6e,
	0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b,
	0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x30, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x4f,
	0x75, 0x74, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x6e,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x49, 0x6e, 0x5f, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73,
	0x1a, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x4f, 0x75, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x00, 0x12, 0x77,
	0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x49, 0x6e, 0x5f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x1a, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x4f, 0x75, 0x74, 0x5f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x12, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x49, 0x6e, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x1a, 0x2c, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x2e, 0x4f, 0x75, 0x74, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x22, 0x00, 0x12, 0x62, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x49, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x53,
	0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x4f, 0x75, 0x74, 0x5f,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x22,
	0x00, 0x42, 0x66, 0x0a, 0x2d, 0x63, 0x6f, 0x6d, 0x2e, 0x71, 0x69, 0x61, 0x6e, 0x78, 0x75, 0x6e,
	0x6b, 0x65, 0x2e, 0x65, 0x67, 0x6f, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x42, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x50, 0x01, 0x5a, 0x22, 0x67, 0x6f, 0x5f, 0x6f, 0x75, 0x74, 0x2f, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDescOnce sync.Once
	file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDescData = file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDesc
)

func file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDescGZIP() []byte {
	file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDescOnce.Do(func() {
		file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDescData = protoimpl.X.CompressGZIP(file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDescData)
	})
	return file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDescData
}

var file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_modules_inventory_product_sku_stock_product_sku_stock_proto_goTypes = []interface{}{
	(*ProductSkuStock)(nil),               // 0: product_sku_stock.Product_sku_stock
	(*SkuOutLog)(nil),                     // 1: product_sku_stock.Sku_out_log
	(*Error)(nil),                         // 2: product_sku_stock.Error
	(*In_GetProductSkuStockById)(nil),     // 3: product_sku_stock.In_GetProductSkuStockById
	(*Out_GetProductSkuStockById)(nil),    // 4: product_sku_stock.Out_GetProductSkuStockById
	(*Out_UpdateProductSkuStockInfo)(nil), // 5: product_sku_stock.Out_UpdateProductSkuStockInfo
	(*In_UpdateProductSkuStockInfo)(nil),  // 6: product_sku_stock.In_UpdateProductSkuStockInfo
	(*In_GetProductSkuStocks)(nil),        // 7: product_sku_stock.In_GetProductSkuStocks
	(*Out_GetProductSkuStocks)(nil),       // 8: product_sku_stock.Out_GetProductSkuStocks
	(*In_DeleteProductSkuStocks)(nil),     // 9: product_sku_stock.In_DeleteProductSkuStocks
	(*Out_DeleteProductSkuStocks)(nil),    // 10: product_sku_stock.Out_DeleteProductSkuStocks
	(*In_CreateProductSkuStock)(nil),      // 11: product_sku_stock.In_CreateProductSkuStock
	(*Out_CreateProductSkuStock)(nil),     // 12: product_sku_stock.Out_CreateProductSkuStock
	(*In_GetSellSkuStock)(nil),            // 13: product_sku_stock.In_GetSellSkuStock
	(*Out_GetSellSkuStock)(nil),           // 14: product_sku_stock.Out_GetSellSkuStock
}
var file_modules_inventory_product_sku_stock_product_sku_stock_proto_depIdxs = []int32{
	2,  // 0: product_sku_stock.Out_GetProductSkuStockById.error:type_name -> product_sku_stock.Error
	0,  // 1: product_sku_stock.Out_GetProductSkuStockById.product_sku_stock:type_name -> product_sku_stock.Product_sku_stock
	2,  // 2: product_sku_stock.Out_UpdateProductSkuStockInfo.error:type_name -> product_sku_stock.Error
	0,  // 3: product_sku_stock.Out_UpdateProductSkuStockInfo.product_sku_stock:type_name -> product_sku_stock.Product_sku_stock
	0,  // 4: product_sku_stock.In_UpdateProductSkuStockInfo.product_sku_stock:type_name -> product_sku_stock.Product_sku_stock
	2,  // 5: product_sku_stock.Out_GetProductSkuStocks.error:type_name -> product_sku_stock.Error
	0,  // 6: product_sku_stock.Out_GetProductSkuStocks.product_sku_stock_list:type_name -> product_sku_stock.Product_sku_stock
	2,  // 7: product_sku_stock.Out_DeleteProductSkuStocks.error:type_name -> product_sku_stock.Error
	0,  // 8: product_sku_stock.In_CreateProductSkuStock.product_sku_stock:type_name -> product_sku_stock.Product_sku_stock
	2,  // 9: product_sku_stock.Out_CreateProductSkuStock.error:type_name -> product_sku_stock.Error
	0,  // 10: product_sku_stock.Out_CreateProductSkuStock.product_sku_stock:type_name -> product_sku_stock.Product_sku_stock
	1,  // 11: product_sku_stock.Out_GetSellSkuStock.sku_out_log:type_name -> product_sku_stock.Sku_out_log
	2,  // 12: product_sku_stock.Out_GetSellSkuStock.error:type_name -> product_sku_stock.Error
	3,  // 13: product_sku_stock.ProductSkuStockHandler.GetProductSkuStockById:input_type -> product_sku_stock.In_GetProductSkuStockById
	6,  // 14: product_sku_stock.ProductSkuStockHandler.UpdateProductSkuStockInfo:input_type -> product_sku_stock.In_UpdateProductSkuStockInfo
	7,  // 15: product_sku_stock.ProductSkuStockHandler.GetProductSkuStocks:input_type -> product_sku_stock.In_GetProductSkuStocks
	9,  // 16: product_sku_stock.ProductSkuStockHandler.DeleteProductSkuStocks:input_type -> product_sku_stock.In_DeleteProductSkuStocks
	11, // 17: product_sku_stock.ProductSkuStockHandler.CreateProductSkuStock:input_type -> product_sku_stock.In_CreateProductSkuStock
	13, // 18: product_sku_stock.ProductSkuStockHandler.GetSellSkuStock:input_type -> product_sku_stock.In_GetSellSkuStock
	4,  // 19: product_sku_stock.ProductSkuStockHandler.GetProductSkuStockById:output_type -> product_sku_stock.Out_GetProductSkuStockById
	5,  // 20: product_sku_stock.ProductSkuStockHandler.UpdateProductSkuStockInfo:output_type -> product_sku_stock.Out_UpdateProductSkuStockInfo
	8,  // 21: product_sku_stock.ProductSkuStockHandler.GetProductSkuStocks:output_type -> product_sku_stock.Out_GetProductSkuStocks
	10, // 22: product_sku_stock.ProductSkuStockHandler.DeleteProductSkuStocks:output_type -> product_sku_stock.Out_DeleteProductSkuStocks
	12, // 23: product_sku_stock.ProductSkuStockHandler.CreateProductSkuStock:output_type -> product_sku_stock.Out_CreateProductSkuStock
	14, // 24: product_sku_stock.ProductSkuStockHandler.GetSellSkuStock:output_type -> product_sku_stock.Out_GetSellSkuStock
	19, // [19:25] is the sub-list for method output_type
	13, // [13:19] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_modules_inventory_product_sku_stock_product_sku_stock_proto_init() }
func file_modules_inventory_product_sku_stock_product_sku_stock_proto_init() {
	if File_modules_inventory_product_sku_stock_product_sku_stock_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSkuStock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuOutLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*In_GetProductSkuStockById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Out_GetProductSkuStockById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Out_UpdateProductSkuStockInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*In_UpdateProductSkuStockInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*In_GetProductSkuStocks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Out_GetProductSkuStocks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*In_DeleteProductSkuStocks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Out_DeleteProductSkuStocks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*In_CreateProductSkuStock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Out_CreateProductSkuStock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*In_GetSellSkuStock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Out_GetSellSkuStock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_modules_inventory_product_sku_stock_product_sku_stock_proto_goTypes,
		DependencyIndexes: file_modules_inventory_product_sku_stock_product_sku_stock_proto_depIdxs,
		MessageInfos:      file_modules_inventory_product_sku_stock_product_sku_stock_proto_msgTypes,
	}.Build()
	File_modules_inventory_product_sku_stock_product_sku_stock_proto = out.File
	file_modules_inventory_product_sku_stock_product_sku_stock_proto_rawDesc = nil
	file_modules_inventory_product_sku_stock_product_sku_stock_proto_goTypes = nil
	file_modules_inventory_product_sku_stock_product_sku_stock_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProductSkuStockHandlerClient is the client API for ProductSkuStockHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProductSkuStockHandlerClient interface {
	//获取信息
	GetProductSkuStockById(ctx context.Context, in *In_GetProductSkuStockById, opts ...grpc.CallOption) (*Out_GetProductSkuStockById, error)
	//修改信息
	UpdateProductSkuStockInfo(ctx context.Context, in *In_UpdateProductSkuStockInfo, opts ...grpc.CallOption) (*Out_UpdateProductSkuStockInfo, error)
	//获取列表
	GetProductSkuStocks(ctx context.Context, in *In_GetProductSkuStocks, opts ...grpc.CallOption) (*Out_GetProductSkuStocks, error)
	//删除列表
	DeleteProductSkuStocks(ctx context.Context, in *In_DeleteProductSkuStocks, opts ...grpc.CallOption) (*Out_DeleteProductSkuStocks, error)
	//新建信息
	CreateProductSkuStock(ctx context.Context, in *In_CreateProductSkuStock, opts ...grpc.CallOption) (*Out_CreateProductSkuStock, error)
	GetSellSkuStock(ctx context.Context, in *In_GetSellSkuStock, opts ...grpc.CallOption) (*Out_GetSellSkuStock, error)
}

type productSkuStockHandlerClient struct {
	cc grpc.ClientConnInterface
}

func NewProductSkuStockHandlerClient(cc grpc.ClientConnInterface) ProductSkuStockHandlerClient {
	return &productSkuStockHandlerClient{cc}
}

func (c *productSkuStockHandlerClient) GetProductSkuStockById(ctx context.Context, in *In_GetProductSkuStockById, opts ...grpc.CallOption) (*Out_GetProductSkuStockById, error) {
	out := new(Out_GetProductSkuStockById)
	err := c.cc.Invoke(ctx, "/product_sku_stock.ProductSkuStockHandler/GetProductSkuStockById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productSkuStockHandlerClient) UpdateProductSkuStockInfo(ctx context.Context, in *In_UpdateProductSkuStockInfo, opts ...grpc.CallOption) (*Out_UpdateProductSkuStockInfo, error) {
	out := new(Out_UpdateProductSkuStockInfo)
	err := c.cc.Invoke(ctx, "/product_sku_stock.ProductSkuStockHandler/UpdateProductSkuStockInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productSkuStockHandlerClient) GetProductSkuStocks(ctx context.Context, in *In_GetProductSkuStocks, opts ...grpc.CallOption) (*Out_GetProductSkuStocks, error) {
	out := new(Out_GetProductSkuStocks)
	err := c.cc.Invoke(ctx, "/product_sku_stock.ProductSkuStockHandler/GetProductSkuStocks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productSkuStockHandlerClient) DeleteProductSkuStocks(ctx context.Context, in *In_DeleteProductSkuStocks, opts ...grpc.CallOption) (*Out_DeleteProductSkuStocks, error) {
	out := new(Out_DeleteProductSkuStocks)
	err := c.cc.Invoke(ctx, "/product_sku_stock.ProductSkuStockHandler/DeleteProductSkuStocks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productSkuStockHandlerClient) CreateProductSkuStock(ctx context.Context, in *In_CreateProductSkuStock, opts ...grpc.CallOption) (*Out_CreateProductSkuStock, error) {
	out := new(Out_CreateProductSkuStock)
	err := c.cc.Invoke(ctx, "/product_sku_stock.ProductSkuStockHandler/CreateProductSkuStock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productSkuStockHandlerClient) GetSellSkuStock(ctx context.Context, in *In_GetSellSkuStock, opts ...grpc.CallOption) (*Out_GetSellSkuStock, error) {
	out := new(Out_GetSellSkuStock)
	err := c.cc.Invoke(ctx, "/product_sku_stock.ProductSkuStockHandler/GetSellSkuStock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProductSkuStockHandlerServer is the server API for ProductSkuStockHandler service.
type ProductSkuStockHandlerServer interface {
	//获取信息
	GetProductSkuStockById(context.Context, *In_GetProductSkuStockById) (*Out_GetProductSkuStockById, error)
	//修改信息
	UpdateProductSkuStockInfo(context.Context, *In_UpdateProductSkuStockInfo) (*Out_UpdateProductSkuStockInfo, error)
	//获取列表
	GetProductSkuStocks(context.Context, *In_GetProductSkuStocks) (*Out_GetProductSkuStocks, error)
	//删除列表
	DeleteProductSkuStocks(context.Context, *In_DeleteProductSkuStocks) (*Out_DeleteProductSkuStocks, error)
	//新建信息
	CreateProductSkuStock(context.Context, *In_CreateProductSkuStock) (*Out_CreateProductSkuStock, error)
	GetSellSkuStock(context.Context, *In_GetSellSkuStock) (*Out_GetSellSkuStock, error)
}

// UnimplementedProductSkuStockHandlerServer can be embedded to have forward compatible implementations.
type UnimplementedProductSkuStockHandlerServer struct {
}

func (*UnimplementedProductSkuStockHandlerServer) GetProductSkuStockById(context.Context, *In_GetProductSkuStockById) (*Out_GetProductSkuStockById, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProductSkuStockById not implemented")
}
func (*UnimplementedProductSkuStockHandlerServer) UpdateProductSkuStockInfo(context.Context, *In_UpdateProductSkuStockInfo) (*Out_UpdateProductSkuStockInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProductSkuStockInfo not implemented")
}
func (*UnimplementedProductSkuStockHandlerServer) GetProductSkuStocks(context.Context, *In_GetProductSkuStocks) (*Out_GetProductSkuStocks, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProductSkuStocks not implemented")
}
func (*UnimplementedProductSkuStockHandlerServer) DeleteProductSkuStocks(context.Context, *In_DeleteProductSkuStocks) (*Out_DeleteProductSkuStocks, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProductSkuStocks not implemented")
}
func (*UnimplementedProductSkuStockHandlerServer) CreateProductSkuStock(context.Context, *In_CreateProductSkuStock) (*Out_CreateProductSkuStock, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProductSkuStock not implemented")
}
func (*UnimplementedProductSkuStockHandlerServer) GetSellSkuStock(context.Context, *In_GetSellSkuStock) (*Out_GetSellSkuStock, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSellSkuStock not implemented")
}

func RegisterProductSkuStockHandlerServer(s *grpc.Server, srv ProductSkuStockHandlerServer) {
	s.RegisterService(&_ProductSkuStockHandler_serviceDesc, srv)
}

func _ProductSkuStockHandler_GetProductSkuStockById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(In_GetProductSkuStockById)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductSkuStockHandlerServer).GetProductSkuStockById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product_sku_stock.ProductSkuStockHandler/GetProductSkuStockById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductSkuStockHandlerServer).GetProductSkuStockById(ctx, req.(*In_GetProductSkuStockById))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductSkuStockHandler_UpdateProductSkuStockInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(In_UpdateProductSkuStockInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductSkuStockHandlerServer).UpdateProductSkuStockInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product_sku_stock.ProductSkuStockHandler/UpdateProductSkuStockInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductSkuStockHandlerServer).UpdateProductSkuStockInfo(ctx, req.(*In_UpdateProductSkuStockInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductSkuStockHandler_GetProductSkuStocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(In_GetProductSkuStocks)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductSkuStockHandlerServer).GetProductSkuStocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product_sku_stock.ProductSkuStockHandler/GetProductSkuStocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductSkuStockHandlerServer).GetProductSkuStocks(ctx, req.(*In_GetProductSkuStocks))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductSkuStockHandler_DeleteProductSkuStocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(In_DeleteProductSkuStocks)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductSkuStockHandlerServer).DeleteProductSkuStocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product_sku_stock.ProductSkuStockHandler/DeleteProductSkuStocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductSkuStockHandlerServer).DeleteProductSkuStocks(ctx, req.(*In_DeleteProductSkuStocks))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductSkuStockHandler_CreateProductSkuStock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(In_CreateProductSkuStock)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductSkuStockHandlerServer).CreateProductSkuStock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product_sku_stock.ProductSkuStockHandler/CreateProductSkuStock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductSkuStockHandlerServer).CreateProductSkuStock(ctx, req.(*In_CreateProductSkuStock))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductSkuStockHandler_GetSellSkuStock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(In_GetSellSkuStock)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductSkuStockHandlerServer).GetSellSkuStock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product_sku_stock.ProductSkuStockHandler/GetSellSkuStock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductSkuStockHandlerServer).GetSellSkuStock(ctx, req.(*In_GetSellSkuStock))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProductSkuStockHandler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "product_sku_stock.ProductSkuStockHandler",
	HandlerType: (*ProductSkuStockHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProductSkuStockById",
			Handler:    _ProductSkuStockHandler_GetProductSkuStockById_Handler,
		},
		{
			MethodName: "UpdateProductSkuStockInfo",
			Handler:    _ProductSkuStockHandler_UpdateProductSkuStockInfo_Handler,
		},
		{
			MethodName: "GetProductSkuStocks",
			Handler:    _ProductSkuStockHandler_GetProductSkuStocks_Handler,
		},
		{
			MethodName: "DeleteProductSkuStocks",
			Handler:    _ProductSkuStockHandler_DeleteProductSkuStocks_Handler,
		},
		{
			MethodName: "CreateProductSkuStock",
			Handler:    _ProductSkuStockHandler_CreateProductSkuStock_Handler,
		},
		{
			MethodName: "GetSellSkuStock",
			Handler:    _ProductSkuStockHandler_GetSellSkuStock_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "modules/inventory/product_sku_stock/product_sku_stock.proto",
}
