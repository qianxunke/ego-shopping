// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.10.1
// source: modules/inventory/brand/brand.proto

package brand

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//sku的库存
type Brand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                             //
	FirstLetter         string `protobuf:"bytes,3,opt,name=first_letter,json=firstLetter,proto3" json:"first_letter,omitempty"`                            //'首字母
	Sort                int64  `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`                                                            //排序
	FactoryStatus       int64  `protobuf:"varint,5,opt,name=factory_status,json=factoryStatus,proto3" json:"factory_status,omitempty"`                     //'是否为品牌制造商：0->不是；1->是'
	ShowStatus          int64  `protobuf:"varint,6,opt,name=show_status,json=showStatus,proto3" json:"show_status,omitempty"`                              //销售属性1
	ProductCount        int64  `protobuf:"varint,7,opt,name=product_count,json=productCount,proto3" json:"product_count,omitempty"`                        //'产品数量'
	ProductCommentCount int64  `protobuf:"varint,8,opt,name=product_comment_count,json=productCommentCount,proto3" json:"product_comment_count,omitempty"` //'产品评论数量'
	Logo                string `protobuf:"bytes,9,opt,name=logo,proto3" json:"logo,omitempty"`                                                             //品牌logo
	BigPic              string `protobuf:"bytes,10,opt,name=big_pic,json=bigPic,proto3" json:"big_pic,omitempty"`                                          //专区大图
	BrandStory          string `protobuf:"bytes,11,opt,name=brand_story,json=brandStory,proto3" json:"brand_story,omitempty"`                              //品牌故事
	CreatedTime         string `protobuf:"bytes,12,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
}

func (x *Brand) Reset() {
	*x = Brand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_brand_brand_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Brand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Brand) ProtoMessage() {}

func (x *Brand) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_brand_brand_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Brand.ProtoReflect.Descriptor instead.
func (*Brand) Descriptor() ([]byte, []int) {
	return file_modules_inventory_brand_brand_proto_rawDescGZIP(), []int{0}
}

func (x *Brand) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Brand) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Brand) GetFirstLetter() string {
	if x != nil {
		return x.FirstLetter
	}
	return ""
}

func (x *Brand) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *Brand) GetFactoryStatus() int64 {
	if x != nil {
		return x.FactoryStatus
	}
	return 0
}

func (x *Brand) GetShowStatus() int64 {
	if x != nil {
		return x.ShowStatus
	}
	return 0
}

func (x *Brand) GetProductCount() int64 {
	if x != nil {
		return x.ProductCount
	}
	return 0
}

func (x *Brand) GetProductCommentCount() int64 {
	if x != nil {
		return x.ProductCommentCount
	}
	return 0
}

func (x *Brand) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *Brand) GetBigPic() string {
	if x != nil {
		return x.BigPic
	}
	return ""
}

func (x *Brand) GetBrandStory() string {
	if x != nil {
		return x.BrandStory
	}
	return ""
}

func (x *Brand) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_brand_brand_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_brand_brand_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_modules_inventory_brand_brand_proto_rawDescGZIP(), []int{1}
}

func (x *Error) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type In_GetBrandById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *In_GetBrandById) Reset() {
	*x = In_GetBrandById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_brand_brand_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *In_GetBrandById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*In_GetBrandById) ProtoMessage() {}

func (x *In_GetBrandById) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_brand_brand_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use In_GetBrandById.ProtoReflect.Descriptor instead.
func (*In_GetBrandById) Descriptor() ([]byte, []int) {
	return file_modules_inventory_brand_brand_proto_rawDescGZIP(), []int{2}
}

func (x *In_GetBrandById) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Out_GetBrandById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Brand *Brand `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`
}

func (x *Out_GetBrandById) Reset() {
	*x = Out_GetBrandById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_brand_brand_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Out_GetBrandById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Out_GetBrandById) ProtoMessage() {}

func (x *Out_GetBrandById) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_brand_brand_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Out_GetBrandById.ProtoReflect.Descriptor instead.
func (*Out_GetBrandById) Descriptor() ([]byte, []int) {
	return file_modules_inventory_brand_brand_proto_rawDescGZIP(), []int{3}
}

func (x *Out_GetBrandById) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Out_GetBrandById) GetBrand() *Brand {
	if x != nil {
		return x.Brand
	}
	return nil
}

type Out_UpdateBrandInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Brand *Brand `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`
}

func (x *Out_UpdateBrandInfo) Reset() {
	*x = Out_UpdateBrandInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_brand_brand_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Out_UpdateBrandInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Out_UpdateBrandInfo) ProtoMessage() {}

func (x *Out_UpdateBrandInfo) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_brand_brand_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Out_UpdateBrandInfo.ProtoReflect.Descriptor instead.
func (*Out_UpdateBrandInfo) Descriptor() ([]byte, []int) {
	return file_modules_inventory_brand_brand_proto_rawDescGZIP(), []int{4}
}

func (x *Out_UpdateBrandInfo) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Out_UpdateBrandInfo) GetBrand() *Brand {
	if x != nil {
		return x.Brand
	}
	return nil
}

type In_UpdateBrandInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brand *Brand `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
}

func (x *In_UpdateBrandInfo) Reset() {
	*x = In_UpdateBrandInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_brand_brand_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *In_UpdateBrandInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*In_UpdateBrandInfo) ProtoMessage() {}

func (x *In_UpdateBrandInfo) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_brand_brand_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use In_UpdateBrandInfo.ProtoReflect.Descriptor instead.
func (*In_UpdateBrandInfo) Descriptor() ([]byte, []int) {
	return file_modules_inventory_brand_brand_proto_rawDescGZIP(), []int{5}
}

func (x *In_UpdateBrandInfo) GetBrand() *Brand {
	if x != nil {
		return x.Brand
	}
	return nil
}

type In_GetBrands struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit     int64  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Pages     int64  `protobuf:"varint,2,opt,name=pages,proto3" json:"pages,omitempty"`
	SearchKey string `protobuf:"bytes,3,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	StartTime string `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   string `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *In_GetBrands) Reset() {
	*x = In_GetBrands{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_brand_brand_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *In_GetBrands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*In_GetBrands) ProtoMessage() {}

func (x *In_GetBrands) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_brand_brand_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use In_GetBrands.ProtoReflect.Descriptor instead.
func (*In_GetBrands) Descriptor() ([]byte, []int) {
	return file_modules_inventory_brand_brand_proto_rawDescGZIP(), []int{6}
}

func (x *In_GetBrands) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *In_GetBrands) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *In_GetBrands) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *In_GetBrands) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *In_GetBrands) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type Out_GetBrands struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Limit     int64    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Pages     int64    `protobuf:"varint,3,opt,name=pages,proto3" json:"pages,omitempty"`
	Total     int64    `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	BrandList []*Brand `protobuf:"bytes,5,rep,name=brand_list,json=brandList,proto3" json:"brand_list,omitempty"`
}

func (x *Out_GetBrands) Reset() {
	*x = Out_GetBrands{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_brand_brand_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Out_GetBrands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Out_GetBrands) ProtoMessage() {}

func (x *Out_GetBrands) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_brand_brand_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Out_GetBrands.ProtoReflect.Descriptor instead.
func (*Out_GetBrands) Descriptor() ([]byte, []int) {
	return file_modules_inventory_brand_brand_proto_rawDescGZIP(), []int{7}
}

func (x *Out_GetBrands) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Out_GetBrands) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Out_GetBrands) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *Out_GetBrands) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Out_GetBrands) GetBrandList() []*Brand {
	if x != nil {
		return x.BrandList
	}
	return nil
}

type In_DeleteBrands struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandList []int64 `protobuf:"varint,1,rep,packed,name=brand_list,json=brandList,proto3" json:"brand_list,omitempty"`
}

func (x *In_DeleteBrands) Reset() {
	*x = In_DeleteBrands{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_brand_brand_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *In_DeleteBrands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*In_DeleteBrands) ProtoMessage() {}

func (x *In_DeleteBrands) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_brand_brand_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use In_DeleteBrands.ProtoReflect.Descriptor instead.
func (*In_DeleteBrands) Descriptor() ([]byte, []int) {
	return file_modules_inventory_brand_brand_proto_rawDescGZIP(), []int{8}
}

func (x *In_DeleteBrands) GetBrandList() []int64 {
	if x != nil {
		return x.BrandList
	}
	return nil
}

type Out_DeleteBrands struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Out_DeleteBrands) Reset() {
	*x = Out_DeleteBrands{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_brand_brand_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Out_DeleteBrands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Out_DeleteBrands) ProtoMessage() {}

func (x *Out_DeleteBrands) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_brand_brand_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Out_DeleteBrands.ProtoReflect.Descriptor instead.
func (*Out_DeleteBrands) Descriptor() ([]byte, []int) {
	return file_modules_inventory_brand_brand_proto_rawDescGZIP(), []int{9}
}

func (x *Out_DeleteBrands) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type In_CreateBrand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brand *Brand `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
}

func (x *In_CreateBrand) Reset() {
	*x = In_CreateBrand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_brand_brand_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *In_CreateBrand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*In_CreateBrand) ProtoMessage() {}

func (x *In_CreateBrand) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_brand_brand_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use In_CreateBrand.ProtoReflect.Descriptor instead.
func (*In_CreateBrand) Descriptor() ([]byte, []int) {
	return file_modules_inventory_brand_brand_proto_rawDescGZIP(), []int{10}
}

func (x *In_CreateBrand) GetBrand() *Brand {
	if x != nil {
		return x.Brand
	}
	return nil
}

type Out_CreateBrand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Brand *Brand `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`
}

func (x *Out_CreateBrand) Reset() {
	*x = Out_CreateBrand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modules_inventory_brand_brand_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Out_CreateBrand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Out_CreateBrand) ProtoMessage() {}

func (x *Out_CreateBrand) ProtoReflect() protoreflect.Message {
	mi := &file_modules_inventory_brand_brand_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Out_CreateBrand.ProtoReflect.Descriptor instead.
func (*Out_CreateBrand) Descriptor() ([]byte, []int) {
	return file_modules_inventory_brand_brand_proto_rawDescGZIP(), []int{11}
}

func (x *Out_CreateBrand) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Out_CreateBrand) GetBrand() *Brand {
	if x != nil {
		return x.Brand
	}
	return nil
}

var File_modules_inventory_brand_brand_proto protoreflect.FileDescriptor

var file_modules_inventory_brand_brand_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x22, 0xf4, 0x02, 0x0a,
	0x05, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x5f, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x66, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73,
	0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32,
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x69, 0x67, 0x5f, 0x70, 0x69,
	0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x69, 0x67, 0x50, 0x69, 0x63, 0x12,
	0x1f, 0x0a, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x21, 0x0a, 0x0f, 0x49, 0x6e,
	0x5f, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5a, 0x0a,
	0x10, 0x4f, 0x75, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x5d, 0x0a, 0x13, 0x4f, 0x75, 0x74,
	0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x22, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x38, 0x0a, 0x12, 0x49, 0x6e, 0x5f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22,
	0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x05, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x0c, 0x49, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x0d, 0x4f, 0x75, 0x74,
	0x5f, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x2b, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x30, 0x0a,
	0x0f, 0x49, 0x6e, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x36, 0x0a, 0x10, 0x4f, 0x75, 0x74, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x34, 0x0a, 0x0e, 0x49, 0x6e, 0x5f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x05, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x59, 0x0a,
	0x0f, 0x4f, 0x75, 0x74, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x12, 0x22, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x32, 0xda, 0x02, 0x0a, 0x0c, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x16, 0x2e, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x2e, 0x49, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x42, 0x79, 0x49,
	0x64, 0x1a, 0x17, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x4f, 0x75, 0x74, 0x5f, 0x47, 0x65,
	0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x19, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x49, 0x6e, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1a, 0x2e, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x2e, 0x4f, 0x75, 0x74, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x13, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x49, 0x6e,
	0x5f, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x1a, 0x14, 0x2e, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x2e, 0x4f, 0x75, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73,
	0x22, 0x00, 0x12, 0x41, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x73, 0x12, 0x16, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x49, 0x6e, 0x5f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x1a, 0x17, 0x2e, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x2e, 0x4f, 0x75, 0x74, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x73, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x12, 0x15, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x49, 0x6e, 0x5f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x1a, 0x16, 0x2e, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x2e, 0x4f, 0x75, 0x74, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x22, 0x00, 0x42, 0x44, 0x0a, 0x21, 0x63, 0x6f, 0x6d, 0x2e, 0x71, 0x69, 0x61,
	0x6e, 0x78, 0x75, 0x6e, 0x6b, 0x65, 0x2e, 0x65, 0x67, 0x6f, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x42, 0x05, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x50, 0x01, 0x5a, 0x16, 0x67, 0x6f, 0x5f, 0x6f, 0x75, 0x74, 0x2f, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_modules_inventory_brand_brand_proto_rawDescOnce sync.Once
	file_modules_inventory_brand_brand_proto_rawDescData = file_modules_inventory_brand_brand_proto_rawDesc
)

func file_modules_inventory_brand_brand_proto_rawDescGZIP() []byte {
	file_modules_inventory_brand_brand_proto_rawDescOnce.Do(func() {
		file_modules_inventory_brand_brand_proto_rawDescData = protoimpl.X.CompressGZIP(file_modules_inventory_brand_brand_proto_rawDescData)
	})
	return file_modules_inventory_brand_brand_proto_rawDescData
}

var file_modules_inventory_brand_brand_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_modules_inventory_brand_brand_proto_goTypes = []interface{}{
	(*Brand)(nil),               // 0: brand.Brand
	(*Error)(nil),               // 1: brand.Error
	(*In_GetBrandById)(nil),     // 2: brand.In_GetBrandById
	(*Out_GetBrandById)(nil),    // 3: brand.Out_GetBrandById
	(*Out_UpdateBrandInfo)(nil), // 4: brand.Out_UpdateBrandInfo
	(*In_UpdateBrandInfo)(nil),  // 5: brand.In_UpdateBrandInfo
	(*In_GetBrands)(nil),        // 6: brand.In_GetBrands
	(*Out_GetBrands)(nil),       // 7: brand.Out_GetBrands
	(*In_DeleteBrands)(nil),     // 8: brand.In_DeleteBrands
	(*Out_DeleteBrands)(nil),    // 9: brand.Out_DeleteBrands
	(*In_CreateBrand)(nil),      // 10: brand.In_CreateBrand
	(*Out_CreateBrand)(nil),     // 11: brand.Out_CreateBrand
}
var file_modules_inventory_brand_brand_proto_depIdxs = []int32{
	1,  // 0: brand.Out_GetBrandById.error:type_name -> brand.Error
	0,  // 1: brand.Out_GetBrandById.brand:type_name -> brand.Brand
	1,  // 2: brand.Out_UpdateBrandInfo.error:type_name -> brand.Error
	0,  // 3: brand.Out_UpdateBrandInfo.brand:type_name -> brand.Brand
	0,  // 4: brand.In_UpdateBrandInfo.brand:type_name -> brand.Brand
	1,  // 5: brand.Out_GetBrands.error:type_name -> brand.Error
	0,  // 6: brand.Out_GetBrands.brand_list:type_name -> brand.Brand
	1,  // 7: brand.Out_DeleteBrands.error:type_name -> brand.Error
	0,  // 8: brand.In_CreateBrand.brand:type_name -> brand.Brand
	1,  // 9: brand.Out_CreateBrand.error:type_name -> brand.Error
	0,  // 10: brand.Out_CreateBrand.brand:type_name -> brand.Brand
	2,  // 11: brand.BrandHandler.GetBrandById:input_type -> brand.In_GetBrandById
	5,  // 12: brand.BrandHandler.UpdateBrandInfo:input_type -> brand.In_UpdateBrandInfo
	6,  // 13: brand.BrandHandler.GetBrands:input_type -> brand.In_GetBrands
	8,  // 14: brand.BrandHandler.DeleteBrands:input_type -> brand.In_DeleteBrands
	10, // 15: brand.BrandHandler.CreateBrand:input_type -> brand.In_CreateBrand
	3,  // 16: brand.BrandHandler.GetBrandById:output_type -> brand.Out_GetBrandById
	4,  // 17: brand.BrandHandler.UpdateBrandInfo:output_type -> brand.Out_UpdateBrandInfo
	7,  // 18: brand.BrandHandler.GetBrands:output_type -> brand.Out_GetBrands
	9,  // 19: brand.BrandHandler.DeleteBrands:output_type -> brand.Out_DeleteBrands
	11, // 20: brand.BrandHandler.CreateBrand:output_type -> brand.Out_CreateBrand
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_modules_inventory_brand_brand_proto_init() }
func file_modules_inventory_brand_brand_proto_init() {
	if File_modules_inventory_brand_brand_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_modules_inventory_brand_brand_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Brand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_brand_brand_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_brand_brand_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*In_GetBrandById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_brand_brand_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Out_GetBrandById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_brand_brand_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Out_UpdateBrandInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_brand_brand_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*In_UpdateBrandInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_brand_brand_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*In_GetBrands); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_brand_brand_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Out_GetBrands); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_brand_brand_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*In_DeleteBrands); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_brand_brand_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Out_DeleteBrands); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_brand_brand_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*In_CreateBrand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modules_inventory_brand_brand_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Out_CreateBrand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_modules_inventory_brand_brand_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_modules_inventory_brand_brand_proto_goTypes,
		DependencyIndexes: file_modules_inventory_brand_brand_proto_depIdxs,
		MessageInfos:      file_modules_inventory_brand_brand_proto_msgTypes,
	}.Build()
	File_modules_inventory_brand_brand_proto = out.File
	file_modules_inventory_brand_brand_proto_rawDesc = nil
	file_modules_inventory_brand_brand_proto_goTypes = nil
	file_modules_inventory_brand_brand_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BrandHandlerClient is the client API for BrandHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BrandHandlerClient interface {
	//获取信息
	GetBrandById(ctx context.Context, in *In_GetBrandById, opts ...grpc.CallOption) (*Out_GetBrandById, error)
	//修改信息
	UpdateBrandInfo(ctx context.Context, in *In_UpdateBrandInfo, opts ...grpc.CallOption) (*Out_UpdateBrandInfo, error)
	//获取列表
	GetBrands(ctx context.Context, in *In_GetBrands, opts ...grpc.CallOption) (*Out_GetBrands, error)
	//删除列表
	DeleteBrands(ctx context.Context, in *In_DeleteBrands, opts ...grpc.CallOption) (*Out_DeleteBrands, error)
	//新建信息
	CreateBrand(ctx context.Context, in *In_CreateBrand, opts ...grpc.CallOption) (*Out_CreateBrand, error)
}

type brandHandlerClient struct {
	cc grpc.ClientConnInterface
}

func NewBrandHandlerClient(cc grpc.ClientConnInterface) BrandHandlerClient {
	return &brandHandlerClient{cc}
}

func (c *brandHandlerClient) GetBrandById(ctx context.Context, in *In_GetBrandById, opts ...grpc.CallOption) (*Out_GetBrandById, error) {
	out := new(Out_GetBrandById)
	err := c.cc.Invoke(ctx, "/brand.BrandHandler/GetBrandById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brandHandlerClient) UpdateBrandInfo(ctx context.Context, in *In_UpdateBrandInfo, opts ...grpc.CallOption) (*Out_UpdateBrandInfo, error) {
	out := new(Out_UpdateBrandInfo)
	err := c.cc.Invoke(ctx, "/brand.BrandHandler/UpdateBrandInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brandHandlerClient) GetBrands(ctx context.Context, in *In_GetBrands, opts ...grpc.CallOption) (*Out_GetBrands, error) {
	out := new(Out_GetBrands)
	err := c.cc.Invoke(ctx, "/brand.BrandHandler/GetBrands", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brandHandlerClient) DeleteBrands(ctx context.Context, in *In_DeleteBrands, opts ...grpc.CallOption) (*Out_DeleteBrands, error) {
	out := new(Out_DeleteBrands)
	err := c.cc.Invoke(ctx, "/brand.BrandHandler/DeleteBrands", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brandHandlerClient) CreateBrand(ctx context.Context, in *In_CreateBrand, opts ...grpc.CallOption) (*Out_CreateBrand, error) {
	out := new(Out_CreateBrand)
	err := c.cc.Invoke(ctx, "/brand.BrandHandler/CreateBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BrandHandlerServer is the server API for BrandHandler service.
type BrandHandlerServer interface {
	//获取信息
	GetBrandById(context.Context, *In_GetBrandById) (*Out_GetBrandById, error)
	//修改信息
	UpdateBrandInfo(context.Context, *In_UpdateBrandInfo) (*Out_UpdateBrandInfo, error)
	//获取列表
	GetBrands(context.Context, *In_GetBrands) (*Out_GetBrands, error)
	//删除列表
	DeleteBrands(context.Context, *In_DeleteBrands) (*Out_DeleteBrands, error)
	//新建信息
	CreateBrand(context.Context, *In_CreateBrand) (*Out_CreateBrand, error)
}

// UnimplementedBrandHandlerServer can be embedded to have forward compatible implementations.
type UnimplementedBrandHandlerServer struct {
}

func (*UnimplementedBrandHandlerServer) GetBrandById(context.Context, *In_GetBrandById) (*Out_GetBrandById, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBrandById not implemented")
}
func (*UnimplementedBrandHandlerServer) UpdateBrandInfo(context.Context, *In_UpdateBrandInfo) (*Out_UpdateBrandInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBrandInfo not implemented")
}
func (*UnimplementedBrandHandlerServer) GetBrands(context.Context, *In_GetBrands) (*Out_GetBrands, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBrands not implemented")
}
func (*UnimplementedBrandHandlerServer) DeleteBrands(context.Context, *In_DeleteBrands) (*Out_DeleteBrands, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBrands not implemented")
}
func (*UnimplementedBrandHandlerServer) CreateBrand(context.Context, *In_CreateBrand) (*Out_CreateBrand, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBrand not implemented")
}

func RegisterBrandHandlerServer(s *grpc.Server, srv BrandHandlerServer) {
	s.RegisterService(&_BrandHandler_serviceDesc, srv)
}

func _BrandHandler_GetBrandById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(In_GetBrandById)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrandHandlerServer).GetBrandById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/brand.BrandHandler/GetBrandById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrandHandlerServer).GetBrandById(ctx, req.(*In_GetBrandById))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrandHandler_UpdateBrandInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(In_UpdateBrandInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrandHandlerServer).UpdateBrandInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/brand.BrandHandler/UpdateBrandInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrandHandlerServer).UpdateBrandInfo(ctx, req.(*In_UpdateBrandInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrandHandler_GetBrands_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(In_GetBrands)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrandHandlerServer).GetBrands(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/brand.BrandHandler/GetBrands",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrandHandlerServer).GetBrands(ctx, req.(*In_GetBrands))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrandHandler_DeleteBrands_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(In_DeleteBrands)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrandHandlerServer).DeleteBrands(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/brand.BrandHandler/DeleteBrands",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrandHandlerServer).DeleteBrands(ctx, req.(*In_DeleteBrands))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrandHandler_CreateBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(In_CreateBrand)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrandHandlerServer).CreateBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/brand.BrandHandler/CreateBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrandHandlerServer).CreateBrand(ctx, req.(*In_CreateBrand))
	}
	return interceptor(ctx, in, info, handler)
}

var _BrandHandler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "brand.BrandHandler",
	HandlerType: (*BrandHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBrandById",
			Handler:    _BrandHandler_GetBrandById_Handler,
		},
		{
			MethodName: "UpdateBrandInfo",
			Handler:    _BrandHandler_UpdateBrandInfo_Handler,
		},
		{
			MethodName: "GetBrands",
			Handler:    _BrandHandler_GetBrands_Handler,
		},
		{
			MethodName: "DeleteBrands",
			Handler:    _BrandHandler_DeleteBrands_Handler,
		},
		{
			MethodName: "CreateBrand",
			Handler:    _BrandHandler_CreateBrand_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "modules/inventory/brand/brand.proto",
}
